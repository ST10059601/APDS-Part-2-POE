version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-frontend:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run frontend tests
          command: npm test --passWithNoTests

  build-frontend:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build frontend
          command: npm run build
      - run:
          name: Create frontend artifacts directory
          command: mkdir -p ~/artifacts/frontend
      - run:
          name: Copy frontend artifacts
          command: cp -R build ~/artifacts/frontend
      - store_artifacts:
          path: ~/artifacts/frontend
          destination: frontend-build

  test-backend:
    executor: node/default
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run backend tests
          command: npm test --passWithNoTests

  build-backend:
    executor: node/default
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Build backend
          command: npm run build
      - run:
          name: Create backend artifacts directory
          command: mkdir -p ~/artifacts/backend
      - run:
          name: Copy backend artifacts
          command: cp -R dist ~/artifacts/backend
      - store_artifacts:
          path: ~/artifacts/backend
          destination: backend-build

  sonarqube:
    docker:
      - image: sonarsource/sonar-scanner-cli
    steps:
      - run: find .
      - attach_workspace:
          at: ~/workspace
      - run: |
          SONAR_BRANCH="${CIRCLE_BRANCH:-master}"
          sonar-scanner \
          -Dsonar.projectKey="$SONAR_PROJECT_KEY" \
          -Dsonar.organization="$SONAR_ORG" \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.exclusions="**/android/**,**/ios/**" \
          -Dsonar.c.file.suffixes=- \
          -Dsonar.cpp.file.suffixes=- \
          -Dsonar.objc.file.suffixes=- \
          -Dsonar.login="$SONAR_TOKEN" \
          -Dsonar.branch.name="$SONAR_BRANCH" \
          -Dsonar.sources="."

workflows:
  build-and-test:
    jobs:
      - test-frontend
      - build-frontend:
          requires:
            - test-frontend
      - test-backend
      - build-backend:
          requires:
            - test-backend
      - sonarqube:
          requires:
            - build-frontend
            - build-backend
